// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniProject1.Grpc.DatabaseContexts;

namespace MiniProject1.Grpc.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20210927144635_RCP")]
    partial class RCP
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MiniProject1.ClassLib.Modules.Book", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("ISBNType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ISBN");

                    b.HasIndex("CourseId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MiniProject1.ClassLib.Modules.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("roomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("roomId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("MiniProject1.ClassLib.Modules.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("MiniProject1.ClassLib.Modules.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MiniProject1.ClassLib.Modules.Book", b =>
                {
                    b.HasOne("MiniProject1.ClassLib.Modules.Course", null)
                        .WithMany("books")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("MiniProject1.ClassLib.Modules.Course", b =>
                {
                    b.HasOne("MiniProject1.ClassLib.Modules.Room", "room")
                        .WithMany()
                        .HasForeignKey("roomId");

                    b.Navigation("room");
                });

            modelBuilder.Entity("MiniProject1.ClassLib.Modules.Student", b =>
                {
                    b.HasOne("MiniProject1.ClassLib.Modules.Course", null)
                        .WithMany("students")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("MiniProject1.ClassLib.Modules.Course", b =>
                {
                    b.Navigation("books");

                    b.Navigation("students");
                });
#pragma warning restore 612, 618
        }
    }
}
